apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}
  labels:
    release: {{ .Release.Name }}
spec:
  concurrencyPolicy: Forbid
  schedule: {{ required ".Values.schedule is required" .Values.schedule | quote}}
  jobTemplate:
    metadata:
      annotations:
        checksum/cm: {{include (print $.Template.BasePath "/cm.yml") . | sha256sum}}
      labels:
        release: {{ .Release.Name }}
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          {{ if and .Values.affinitySameNodeKey .Values.affinitySameNodeValue }}
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: {{ .Values.affinitySameNodeKey }}
                        operator: In
                        values:
                          - {{ .Values.affinitySameNodeValue }}
                  topologyKey: "kubernetes.io/hostname"
          {{ end }}
          volumes:
            - name: ssl
              emptyDir: {}
            - name: config
              configMap:
                name: {{ .Release.Name }}
            {{ if .Values.mountRootPath }}
            - name: host
              hostPath:
                path: /
                type: Directory
            {{ end }}
            {{ if .Values.mountPVCName }}
            - name: pvc
              persistentVolumeClaim:
                claimName: {{ .Values.mountPVCName }}
            {{ end }}
          initContainers:
            - name: copy-ssl
              image: sikalabs/ca-certificates
              args:
                - /bin/sh
                - -c
                - |
                  set -eu
                  # Only copy public trust stores; never touch /etc/ssl/private (root-only)
                  mkdir -p /ssl/certs
                  cp -a /etc/ssl/certs/. /ssl/certs/
                  if [ -f /etc/ssl/certs/ca-certificates.crt ]; then
                    cp -a /etc/ssl/certs/ca-certificates.crt /ssl/
                  fi
                  if [ -f /etc/ssl/openssl.cnf ]; then
                    cp -a /etc/ssl/openssl.cnf /ssl/
                  fi
                  chmod -R a+rX /ssl || true
              volumeMounts:
              - name: ssl
                mountPath: /ssl
          containers:
            - name: main
              image: {{ .Values.image }}
              args:
                - tergum
                - backup
                - -c
                - /config/tergum.yml
                - --extra-name
                - {{ required ".Values.extraName is required" .Values.extraName }}
                {{ if .Values.useV2 }}
                - --v2
                {{ end }}
                {{ if .Values.expandEnv }}
                - --expand-env
                {{ end }}
              imagePullPolicy: Always
              {{ if .Values.existingSecret }}
              envFrom:
              - secretRef:
                  name: {{ .Values.existingSecret }}
              {{ end }}
              volumeMounts:
              - name: ssl
                mountPath: /etc/ssl
              - name: config
                mountPath: /config
              {{ if .Values.mountRootPath }}
              - mountPath: /host
                name: host
              {{ end }}
              {{ if .Values.mountPVCName }}
              - mountPath: /pvc
                name: pvc
              {{ end }}
