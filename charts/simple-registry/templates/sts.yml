apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    release: {{ .Release.Name }}
spec:
  revisionHistoryLimit: 0
  serviceName: {{ .Release.Name }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        {{ if .Values.storageClassName }}
        storageClassName: {{ .Values.storageClassName }}
        {{ end }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.storage }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cm.yml") . | sha256sum }}
      labels:
        release: {{ .Release.Name }}
    spec:
      volumes:
      - name: auth
        configMap:
          name: {{ .Release.Name }}
      containers:
        - name: main
          image: {{ .Values.image }}
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: data
              mountPath: /var/lib/registry
            - name: auth
              mountPath: /auth
          {{ if .Values.registryPassword }}
          env:
            - name: REGISTRY_AUTH
              value: htpasswd
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: Registry Realm
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: /auth/htpasswd
          {{ end }}
        {{ if .Values.hostReadOnly }}
        - name: readonly
          image: {{ .Values.image }}
          imagePullPolicy: Always
          env:
            - name: REGISTRY_HTTP_ADDR
              value: :5001
            - name: REGISTRY_STORAGE_MAINTENANCE
              value: |
                uploadpurging:
                    enabled: false
                readonly:
                    enabled: true
            - name: REGISTRY_STORAGE_DELETE_ENABLED
              value: "false"
          ports:
            - name: http-readonly
              containerPort: 5001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http-readonly
          readinessProbe:
            httpGet:
              path: /
              port: http-readonly
          volumeMounts:
            - name: data
              mountPath: /var/lib/registry
              readOnly: true
        {{ end }}
