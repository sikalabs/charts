apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        release: {{ .Release.Name }}
        app: {{ .Release.Name }}
    spec:
      initContainers:
        - name: init-permissions
          image: busybox:latest
          command: [ "sh", "-c", "chown -R 5050:5050 /var/lib/pgadmin" ]
          volumeMounts:
            - name: {{ .Release.Name }}-data
              mountPath: /var/lib/pgadmin
      containers:
        - name: pgadmin
          image: {{ required ".Values.image is required" .Values.image }}
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: {{ required ".Values.defaultEmail is required" .Values.defaultEmail | quote }}
            - name: PGADMIN_DEFAULT_PASSWORD
              {{ if not .Values.defaultPasswordFromSecret.secretName }}
              value: {{ required ".Values.defaultPassword is required" .Values.defaultPassword | quote }}
              {{ else }}
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.defaultPasswordFromSecret.secretKey }}
                  name: {{ .Values.defaultPasswordFromSecret.secretName }}
              {{ end }}
            {{ if and .Values.oauth.clientSecretFromSecret .Values.oauth.clientSecretFromSecret.secretName  }}
            - name: OAUTH2_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.oauth.clientSecretFromSecret.clientSecretKey }}
                  name: {{ .Values.oauth.clientSecretFromSecret.secretName }}
            {{ end }}
            {{- range $env := .Values.extraEnv }}
            - name: {{ $env.name }}
              value: {{ $env.value | quote }}
            {{- end }}
          volumeMounts:
            - name: {{ .Release.Name }}-data
              mountPath: /var/lib/pgadmin
          {{ if .Values.oauth.clientId }}
            - name: config-volume
              mountPath: /pgadmin4/config_local.py
              subPath: config_local.py
          {{ end }}
      volumes:
        - name: {{ .Release.Name }}-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-data
        {{ if .Values.oauth.clientId }}
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-config-local
        {{ end }}
